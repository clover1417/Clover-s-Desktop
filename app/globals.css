@import "tailwindcss";

:root {
  /* Palette */
  --white:            #FFFFFF;
  --dark-cream:       #E6C9C9;
  --middle-tone:      #F5DEDE;
  --light-cream:      #FDEFEF;
  --transparent-tone: #D9D9D9;

  --background-color: var(--dark-cream);
  --pattern-color:    var(--light-cream);
  --inner-color:      var(--middle-tone);
  --window-color:     var(--white);
  --text-color:       #8C7D7D;
  --border-color:     rgb(194, 165, 165);
  --grid-color:       rgba(255,255,255,0.3);
  --shadow-color:     rgba(0,0,0,0.2);

  --shadow: 0 4px 4px var(--shadow-color);

  --circle-size:      85px;
  --plus-size:        85px;
  --plus-rot:         0deg;
  --triangle-size:   100px;
  --triangle-rot:     -60deg;
}

html, body, #__next, main {
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: var(--background-color);
  color:      var(--text-color);
  background: var(--dark-cream);
  background-image:
    linear-gradient(rgba(255,255,255,0.4) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255,255,255,0.4) 1px, transparent 1px);
  background-size: 60px 60px;
  background-position: center;
  font-family: var(--font-itim);
}
a { color: inherit; text-decoration: none; }
button { user-select: none; }
img { user-select: none; }
.pattern-container {
  inset: 0;
  display: flex;
  justify-content: center;
  background: transparent;
  filter: drop-shadow(var(--shadow));
}
.shapes-container {
  position: relative;
  transform-origin: top center;
  margin-right: 2250px;
}

/* Circle animation - with working hover/active */
.circle {
  width: var(--circle-size);
  height: var(--circle-size);
  border-radius: 50%;
  background-color: var(--pattern-color);
  cursor: pointer;
  position: relative;
  transform-origin: center;
  transition: transform 0.3s ease-out;
}

.circle {
  animation: none; /* Remove direct animation */
}

/* Add a wrapper class for shape animations */
.shape-wrapper {
  position: absolute;
  animation: none; /* Default state */
}

.circle-wrapper {
  animation: floatCircle 18s cubic-bezier(0.37, 0, 0.63, 1) infinite;
}

.circle:hover {
  transform: scale(1.05);
}

.circle:active {
  transform: scale(1.1);
}

.plus {
  width: var(--plus-size);
  height: var(--plus-size);
  transform: rotate(var(--plus-rot));
  cursor: pointer;
  position: relative;
  transform-origin: center;
  transition: all 0.3s ease-out;
}

.plus {
  animation: none; /* Remove direct animation */
}

.plus-wrapper {
  animation: floatPlus 22s cubic-bezier(0.45, 0, 0.55, 1) infinite;
}

.plus:hover {
  transform: rotate(var(--plus-rot)) scale(1.05);
}

.plus:active {
  transform: rotate(var(--plus-rot)) scale(1.1);
}

.plus .bar {
  position: absolute;
  top:      50%;
  left:     50%;
  background:    var(--pattern-color);
  transform: translate(-50%, -50%);
  border-radius: calc(var(--plus-size) * 0.08);
}

.plus .bar:first-child {  /* vertical bar */
  width:  calc(var(--plus-size) * 0.16);
  height: var(--plus-size);
}
.plus .bar:last-child {   /* horizontal bar */
  width:  var(--plus-size);
  height: calc(var(--plus-size) * 0.16);
}

/* Triangle animation - with working hover/active */
.triangle {
  background-color: var(--pattern-color);
  width: var(--triangle-size);
  height: var(--triangle-size);
  border-top-right-radius: 20%;
  cursor: pointer;
  position: relative;
  transform-origin: center;
  transition: all 0.3s ease-out;
  transform: rotate(var(--triangle-rot)) skewX(-30deg) scale(1, 0.866);
}

.triangle {
  animation: none; /* Remove direct animation */
}

.triangle-wrapper {
  animation: floatTriangle 25s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.triangle:hover {
  transform: rotate(var(--triangle-rot)) skewX(-30deg) scale(1.05, 0.91);
}

.triangle:active {
  transform: rotate(var(--triangle-rot)) skewX(-30deg) scale(1.1, 0.953);
}

.triangle::before,
.triangle::after {
  content: '';
  position: absolute;
  width:  inherit;
  height: inherit;
  background-color: inherit;
  border-top-right-radius: inherit;
}
.triangle::before {
  transform:
    rotate(-135deg)
    skewX(-45deg)
    scale(1.414, 0.707)
    translateY(-50%);
}
.triangle::after {
  transform:
    rotate(135deg)
    skewY(-45deg)
    scale(0.707, 1.414)
    translateX(50%);
}

.top-nav {
  position: absolute;
  top: 0; left: 0;
  width: 100%;
  height: 155px;
  background: var(--light-cream);
}
.inner-box {
  position: absolute;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  width: 370px;
  aspect-ratio: 395 / 165;
  background: var(--dark-cream);
  border-radius: 30px;
  box-shadow: inset var(--shadow);
  z-index: 1;
}
.logo-container {
  position: absolute;
  top: -40px;
  left: 50%;
  transform: translateX(-50%);
  width: 370px;
  height: 255px;
  z-index: 1;
}
.logo-container img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  transition: transform 0.2s ease;
}
.logo-container img:hover {
  transform: scale(1.05);
}

.bottom-bar {
  position: fixed;
  bottom: 10px;
  left: 50%;
  transform: translateX(-50%);
  width: 571px;
  height: 10px;
  background: var(--text-color);
  border: 2px solid var(--border-color);
  border-radius: 10px;
  transition: width 0.2s ease;
}
.bottom-bar:hover {
  width: 456.8px; /* 80% of 571px */
}
.copyright-container {
  position: fixed;
  bottom: 30px;
  left: 50%;
  transform: translateX(-50%);
  color: var(--text-color);
  font-size: 25px;
  transition: transform 0.2s ease;
}
.copyright-container:hover {
  transform: translateX(-50%) scale(1.05);
}

/* Desktop Window Layout */
.desktop-window {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

}

.app-icon-container {
  position: absolute;
  top: 60px;
  left: -5px;
  width: 150px;
  height: 485px;
}

.widget-container {
  position: absolute;
  top: 40px;
  right: 10px;
  display: flex;
}

.quick-access-container {
  position: absolute;
  bottom: 45px;
  left: 50%;
  transform: translateX(-50%);
}

/* Window Component Styles */
.window-container {
  position: relative;
  width: 751px;
  height: 575px;
  margin: 0 auto;
}

.window {
  position: relative;
  width: 100%;
  height: 100%;
}

.window-frame {
  width: 100%;
  height: 100%;
}

.main-container {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: var(--light-cream);
  border-radius: 5px;
  box-shadow: -1.7px 4.3px 5.2px rgba(0, 0, 0, 0.25);
}

.upper-part {
  position: absolute;
  top: 0;
  left: 0;
  width: 150px;
  height: 35px;
  background-color: var(--light-cream);
  border-top-left-radius: 3.5px;
  border-top-right-radius: 3.5px;
  z-index: 1;
}

.lower-part {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--light-cream);
  border-radius: 3.5px;
}

.title-bar {
  position: absolute;
  top: 12px;
  left: 10px;
  width: 117px;
  height: 24px;
}

.title-inner {
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 2.6px;
  box-shadow: 0 1.7px 1.7px rgba(0, 0, 0, 0.25);
  display: flex;
  align-items: center;
  padding-left: 13px;
}

.title-text {
  color: var(--text-color);
  font-size: 14px;
}

.window-background {
  position: absolute;
  top: 47px;
  left: 10px;
  width: 732px;
  height: 485px;
  background-color: rgba(255, 255, 255, 0.2);
  border: 0.86px solid var(--border-color);
  border-radius: 2.6px;

  background-image:
    linear-gradient(rgba(72, 57, 57, 0.2) 2px, transparent 1px),
    linear-gradient(90deg, rgba(72, 57, 57, 0.2) 2px, transparent 1px);
  background-size: 40px 40px;
  background-position: center;
}

.background-inner {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
}

.center-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  width: 100%;
}

.hello-text {
  color: var(--text-color);
  font-size: 62px;
  font-family: 'pixelify sans', cursive;
  margin: 0;
  user-select: none;
}

.username-text {
  color: var(--text-color);
  font-size: 21px;
  font-family: 'pixelify sans', cursive;
  margin: 0;
  user-select: none;
}

.taskbar {
  position: absolute;
  bottom: 5px;
  left: 10px;
  width: 732px;
  height: 30px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.return-button {
  margin-left: 4px;
  width: 21.6px;
  height: 21.6px;
  transition: transform 0.1s ease;
}

.return-button:hover {
  transform: scale(1.2);
}

.taskbar-right {
  display: flex;
  align-items: center;
}

.speaker-icon {
  width: 18.1px;
  height: 18.1px;
  margin-right: 10px;
  transition: transform 0.1s ease;
}

.speaker-icon:hover {
  transform: scale(1.2);
}

.time-info {
  text-align: right;
  margin-right: 10px;
  position: relative;
}

.time {
  color: var(--text-color);
  font-size: 14px;
  margin: 0;
}

.date {
  color: var(--text-color);
  font-size: 14px;
  margin: 0;
  position: relative;
  top: -3px;
}

/* App Icon Styles */
.app-icon {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 56px;
  height: 60px;
  cursor: pointer;
  transition: transform 0.1s ease;
}

.app-icon:hover {
  transform: scale(1.05);
}

.app-icon:active {
  transform: scale(0.95);
}

.icon-container {
  width: 42px;
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  filter: drop-shadow(0 3.5px 3.5px rgba(0, 0, 0, 0.25));
}

.icon-label {
  color: var(--text-color);
  font-size: 14px;
  margin: 0;
  text-align: center;
  width: 100%;
}

/* Widget Styles */
.widget {
  display: flex;
  flex-direction: column;
  align-items: center;
  transition: transform 0.1s ease;
}

.widget:hover {
  transform: scale(1.05);
}

.widget-outer {
  background-color: var(--light-cream);
  border-radius: 8.6px;
  box-shadow: 0 3.5px 3.5px rgba(0, 0, 0, 0.1);
  position: relative;
  margin-bottom: 5px;
  cursor: pointer;
  display: flex;
  flex-direction: column;
}

.widget.wigetsmith .widget-outer {
  width: 109.5px;
  height: 129.6px; /* Increased to accommodate label */
}

.widget.announcement .widget-outer {
  width: 151.9px;
  height: 129.6px; /* Increased to accommodate label */
}

.widget-inner {
  position: absolute;
  top: 6px;
  left: 6px;
  background-color: var(--middle-tone);
  border-radius: 6.9px;
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow: hidden;
}

.widget.wigetsmith .widget-inner {
  width: 97.4px;
  height: 97.5px;
  justify-content: center;
}

.widget.announcement .widget-inner {
  width: 139.8px;
  height: 97.5px;
  justify-content: flex-start;
}

.widget-image {
  width: 81.1px;
  height: 81.1px;
  overflow: hidden;
  border-radius: 5.2px;
  position: relative;
}

.widget-image.transitioning .image-exit {
  animation: widgetSlideOut 0.3s forwards;
}

.widget-image .image-enter {
  animation: widgetSlideIn 0.3s forwards;
}

.widget-image img {
  transition: transform 0.2s ease;
}

.widget-image:hover img {
  transform: scale(1.05);
}

.widget-label {
  color: var(--text-color);
  font-size: 14px;
  margin: 0;
  text-align: center;
  position: absolute;
  bottom: 5px;
  left: 0;
  right: 0;
}

.widget-title {
  color: var(--text-color);
  font-size: 14px;
  margin: 16px 0 6px;
  text-align: center;
}

.widget-dividers {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.divider {
  width: 90%;
  height: 1.7px;
  background-color: var(--middle-tone);
  margin: 13px 0;
}

.widget-content {
  width: 100%;
  padding: 0 10px;
  text-align: center;
}

.content-line {
  color: var(--text-color);
  font-size: 14px;
  margin: 0 0 6px;
}

/* Quick Access Styles */
.quick-access {
  width: 140px;
  height: 53px;
  background-color: rgba(217, 217, 217, 0.2);
  border-radius: 8.6px;
  box-shadow: 0 3.5px 3.5px rgba(0, 0, 0, 0.25);
  display: flex;
  justify-content: space-around;
  align-items: center;
}

.quick-access-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0 5px;
  cursor: pointer;
  transition: transform 0.1s ease;
}

.quick-access-item:hover {
  transform: scale(1.05);
}

.quick-access-item:active {
  transform: scale(0.95);
}

.quick-icon {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 1px;
  filter: drop-shadow(0 3.5px 3.5px rgba(0, 0, 0, 0.25));
}

.quick-label {
  color: var(--text-color);
  font-size: 14px;
  margin: 0;
  text-align: center;
}

/* Modal Styles */
.modal-overlay {
  position: fixed;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.modal-container {
  position: relative;
  width: 350px;
  background-color: var(--light-cream);
  border-radius: 8px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25);
  display: flex;
  flex-direction: column;
  border: 2px solid var(--border-color);
  max-width: 90vw;
}

.modal-header {
  padding: 10px 10px;
  background-color: var(--middle-tone);
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
  border-bottom: 1px solid var(--border-color);
}

.modal-title {
  margin: 0;
  color: var(--text-color);
  font-size: 18px;
  font-weight: normal;
  text-align: center;
}

.modal-content {
  flex-grow: 1;
  padding: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.modal-message {
  margin: 0 0 15px 0;
  color: var(--text-color);
  font-size: 16px;
  text-align: center;
}

.modal-destination {
  margin: 0;
  padding: 8px 12px;
  background-color: var(--middle-tone);
  color: var(--text-color);
  font-size: 14px;
  border-radius: 4px;
  word-break: break-all;
  width: 85%;
  text-align: center;
}

.modal-actions {
  display: flex;
  justify-content: center;
  gap: 40px;
  padding: 15px;
  border-top: 1px solid var(--border-color);
}

.modal-button {
  min-width: 80px;
  padding: 8px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 15px;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.modal-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

.modal-button:active {
  transform: translateY(1px);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

.confirm-button {
  background-color: var(--middle-tone);
  color: var(--text-color);
  border: 1px solid var(--border-color);
}

.cancel-button {
  background-color: var(--dark-cream);
  color: var(--text-color);
  border: 1px solid var(--border-color);
}

/* Modal Animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes popIn {
  0% { transform: translate(-50%, -50%) scale(0.5); opacity: 0; }
  70% { transform: translate(-50%, -50%) scale(1.05); opacity: 1; }
  100% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
}

@keyframes popOut {
  0% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
  30% { transform: translate(-50%, -50%) scale(1.05); opacity: 1; }
  100% { transform: translate(-50%, -50%) scale(0.5); opacity: 0; }
}

.modal-show.modal-container {
  animation: popIn 0.3s ease forwards;
}

.modal-hide.modal-container {
  animation: popOut 0.3s ease forwards;
}

/* Updated keyframes for wrappers */
@keyframes floatCircle {
  0% { transform: translate(0, 0); }
  20% { transform: translate(-3px, 5px); }
  40% { transform: translate(5px, -3px); }
  60% { transform: translate(-5px, -4px); }
  80% { transform: translate(4px, 6px); }
  100% { transform: translate(0, 0); }
}

@keyframes floatPlus {
  0% { transform: translate(0, 0); }
  15% { transform: translate(2px, 4px); }
  30% { transform: translate(6px, 2px); }
  45% { transform: translate(4px, -3px); }
  60% { transform: translate(-2px, -5px); }
  75% { transform: translate(-5px, -2px); }
  90% { transform: translate(-3px, 3px); }
  100% { transform: translate(0, 0); }
}

@keyframes floatTriangle {
  0% { transform: translate(0, 0); }
  16% { transform: translate(-3px, -2px); }
  33% { transform: translate(2px, -5px); }
  50% { transform: translate(4px, -1px); }
  66% { transform: translate(3px, 3px); }
  83% { transform: translate(-2px, 4px); }
  100% { transform: translate(0, 0); }
}

/* Image Viewer Styles */
.image-viewer-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(40, 34, 34, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  backdrop-filter: blur(3px);
  z-index: 9999;
  animation: fadeIn 0.3s ease-out;
}

.image-viewer-container {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100vw;
  height: 100vh;
}

.image-viewer-content-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  position: relative;
  overflow: visible;
}

.image-viewer-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  user-select: none;
  position: absolute;
  top: 50%;
  left: 50%;
  animation: viewerPopIn 0.4s ease-out;
  will-change: transform, opacity;
  cursor: grab;
}

.image-viewer-content.initial-load {
  animation: none;
}

.image-viewer-content:active {
  cursor: grabbing;
}

/* Image slide animations - like the widget preview */
.image-viewer-img.slide-enter {
  animation: imageSlideIn 0.3s ease;
}

.image-viewer-img.slide-exit-left {
  animation: imageSlideOutLeft 0.3s forwards;
}

.image-viewer-img.slide-exit-right {
  animation: imageSlideOutRight 0.3s forwards;
}

/* Image transition keyframes - simplified like widget */
@keyframes imageSlideIn {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes imageSlideOutLeft {
  0% { opacity: 1; transform: translateX(0); }
  100% { opacity: 0; transform: translateX(-30px); }
}

@keyframes imageSlideOutRight {
  0% { opacity: 1; transform: translateX(0); }
  100% { opacity: 0; transform: translateX(30px); }
}

.image-viewer-img {
  border-radius: 8px;
  object-fit: contain;
  max-width: 90vw;
  max-height: 85vh;
  width: auto;
  height: auto;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  user-select: none;
  pointer-events: none;
  transform-origin: center;
  transition: opacity 0.3s ease-in-out;
}

.image-viewer-name {
  margin-top: 20px;
  color: white;
  font-size: 18px;
  text-align: center;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
  user-select: none;
}

.image-viewer-close-btn {
  position: absolute;
  bottom: 20px;
  right: 20px;
  padding: 8px 16px;
  background-color: var(--middle-tone);
  color: var(--text-color);
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 16px;
  transition: transform 0.2s ease, background-color 0.2s ease;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.2);
  z-index: 10;
}

.image-viewer-close-btn:hover {
  transform: scale(1.05);
  background-color: var(--dark-cream);
}

.image-viewer-close-btn:active {
  transform: scale(0.95);
}

/* Navigation buttons */
.image-viewer-nav-btn {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.4);
  color: white;
  border: none;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: all 0.2s ease;
  opacity: 0.6;
  z-index: 10;
}

.image-viewer-nav-btn:hover {
  background-color: rgba(0, 0, 0, 0.6);
  opacity: 1;
}

.image-viewer-nav-btn:active {
  transform: scale(0.95);
}

.image-viewer-nav-btn.left {
  left: 20px;
}

.image-viewer-nav-btn.right {
  right: 20px;
}

/* Pagination dots */
.image-viewer-pagination {
  position: absolute;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(0, 0, 0, 0.5);
  border-radius: 20px;
  padding: 6px 12px;
  z-index: 10;
}

.pagination-dots {
  display: flex;
  gap: 8px;
}

.pagination-dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  border: none;
  background-color: rgba(255, 255, 255, 0.4);
  cursor: pointer;
  transition: all 0.2s ease;
  padding: 0;
}

.pagination-dot:hover {
  background-color: rgba(255, 255, 255, 0.7);
}

.pagination-dot.active {
  background-color: white;
  transform: scale(1.2);
}

/* Image Viewer Animations */
@keyframes viewerPopIn {
  0% { transform: translate(-50%, -50%) scale(0.8); opacity: 0; }
  70% { transform: translate(-50%, -50%) scale(1.03); opacity: 1; }
  100% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
}

@keyframes slideOutLeft {
  0% { transform: translateX(0); }
  100% { transform: translateX(-100px); }
}

@keyframes slideOutRight {
  0% { transform: translateX(0); }
  100% { transform: translateX(100px); }
}

@keyframes slideInLeft {
  0% { transform: translateX(100px); }
  100% { transform: translateX(0); }
}

@keyframes slideInRight {
  0% { transform: translateX(-100px); }
  100% { transform: translateX(0); }
}

/* Widget image preview animations - original versions for widget only */
@keyframes widgetSlideIn {
  0% { opacity: 0; transform: translateX(30px); }
  100% { opacity: 1; transform: translateX(0); }
}

@keyframes widgetSlideOut {
  0% { opacity: 1; transform: translateX(0); }
  100% { opacity: 0; transform: translateX(-30px); }
}

@keyframes widgetSlideOutRight {
  0% { opacity: 1; transform: translateX(0); }
  100% { opacity: 0; transform: translateX(30px); }
}

@keyframes widgetSlideInRight {
  0% { opacity: 0; transform: translateX(-30px); }
  100% { opacity: 1; transform: translateX(0); }
}

/* Specific animations for the widget image transitions */
.widget-image.transitioning .image-exit {
  animation: widgetSlideOut 0.3s forwards;
}

.widget-image .image-enter {
  animation: widgetSlideIn 0.3s forwards;
}

/* Image viewer specific animations */
@keyframes viewerSlideIn {
  0% { opacity: 0; transform: translate(calc(-50% - 30px), -50%); }
  100% { opacity: 1; transform: translate(-50%, -50%); }
}

@keyframes viewerSlideOut {
  0% { opacity: 1; transform: translate(0, 0); }
  100% { opacity: 0; transform: translate(-30px, 0); }
}

@keyframes viewerSlideOutRight {
  0% { opacity: 1; transform: translate(0, 0); }
  100% { opacity: 0; transform: translate(30px, 0); }
}

@keyframes viewerSlideInRight {
  0% { opacity: 0; transform: translate(calc(-50% + 30px), -50%); }
  100% { opacity: 1; transform: translate(-50%, -50%); }
}

/* Reset transform for the current image during transition */
.image-viewer-content.exiting-left,
.image-viewer-content.exiting-right {
  transform: translate(-50%, -50%) !important;
}

/* Modified next-image animations to maintain position */
.next-image.entering-left {
  animation: viewerSlideInRight 0.3s 0.3s forwards;
  transform: translate(calc(-50% + 30px), -50%) !important;
}

.next-image.entering-right {
  animation: viewerSlideIn 0.3s 0.3s forwards;
  transform: translate(calc(-50% - 30px), -50%) !important;
}

/* Image viewer transition classes using viewer-specific animations */
.image-viewer-content.exiting-left .image-exit {
  animation: viewerSlideOut 0.3s forwards;
}

.image-viewer-content.exiting-right .image-exit {
  animation: viewerSlideOutRight 0.3s forwards;
}
